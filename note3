task checkDuplicatePackages {
    doLast {
        def jarFiles = fileTree(buildDir).include('**/*.jar').files
        def duplicatePackages = [:]

        jarFiles.each { jarFile ->
            def zip = new java.util.zip.ZipFile(jarFile)
            zip.entries().each { entry ->
                if (entry.name.endsWith(".class")) {
                    def packageName = entry.name.replaceAll("/", ".").replace(".class", "")
                    duplicatePackages[packageName] = (duplicatePackages[packageName] ?: 0) + 1
                }
            }
            zip.close()
        }

        duplicatePackages.each { packageName, count ->
            if (count > 1) {
                println "Duplicate package found: $packageName in $count JAR files."
            }
        }

        if (duplicatePackages.isEmpty()) {
            println "No duplicate packages found."
        }
    }
}
